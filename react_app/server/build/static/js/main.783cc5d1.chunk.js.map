{"version":3,"sources":["App.js","index.js"],"names":["errorLink","onError","graphqlErrors","networkError","console","log","map","message","location","path","alert","link","from","HttpLink","uri","client","ApolloClient","cache","App","useState","siteState","setSiteState","useEffect","fetch","then","res","json","data","ApolloProvider","className","Button","Card","sx","maxWidth","CardMedia","component","height","image","alt","CardContent","Typography","gutterBottom","variant","color","JSON","stringify","renderState","CardActions","size","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"8TAoBMA,EAAYC,aAAQ,YAAsC,IAAnCC,EAAa,EAAbA,cAAeC,EAAY,EAAZA,aAC1CC,QAAQC,IAAI,iBAAkBF,GAC1BD,GACFA,EAAcI,KAAI,YAAkC,IAA/BC,EAAO,EAAPA,QAAiB,EAARC,SAAc,EAAJC,KACtCC,MAAM,iBAAD,OAAkBH,GACzB,GAEJ,IAEMI,EAAOC,YAAK,CAChBZ,EACA,IAAIa,IAAS,CAAEC,IAAK,oCAEhBC,EAAS,IAAIC,IAAa,CAC9BC,MAAO,CAAC,EACRN,KAAMA,IAkDOO,MAhDf,WACE,MAAkCC,mBAAS,CAAC,GAAE,mBAAvCC,EAAS,KAAEC,EAAY,KAa9B,OAXAC,qBAAU,WAERC,MAAM,cACJC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IACtBF,MAAK,SAAAG,GAAI,OAAIN,EAAaM,EAAK,GAEnC,GAAG,IAMD,cAACC,EAAA,EAAc,CAACb,OAAQA,EAAO,SAC7B,sBAAKc,UAAU,MAAK,wBAElB,cAACC,EAAA,EAAM,8BAEP,eAACC,EAAA,EAAI,CAACC,GAAI,CAAEC,SAAU,KAAM,UAC1B,cAACC,EAAA,EAAS,CACRC,UAAU,MACVC,OAAO,MACPC,MAAOjB,EAAUiB,MAAQjB,EAAUiB,MAAQ,kDAC3CC,IAAI,iBAGN,eAACC,EAAA,EAAW,WACV,cAACC,EAAA,EAAU,CAACC,cAAY,EAACC,QAAQ,KAAKP,UAAU,MAAK,wBAIrD,eAACK,EAAA,EAAU,CAACE,QAAQ,QAAQC,MAAM,iBAAgB,2BAvB5D,WACE,GAAIvB,EACF,OAAOwB,KAAKC,UAAUzB,EAC1B,CAsBa0B,SAGL,eAACC,EAAA,EAAW,WACV,cAACjB,EAAA,EAAM,CAACkB,KAAK,QAAO,mBACpB,cAAClB,EAAA,EAAM,CAACkB,KAAK,QAAO,kCAMhC,EC7EaC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,M","file":"static/js/main.783cc5d1.chunk.js","sourcesContent":["\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  HttpLink,\n  from\n} from '@apollo/client';\nimport { ErrorLink, onError } from '@apollo/client/link/error'\n\n\nconst errorLink = onError(({ graphqlErrors, networkError }) => {\n  console.log(\"network error \", networkError)\n  if (graphqlErrors) {\n    graphqlErrors.map(({ message, location, path }) => {\n      alert(`Graphql error ${message}`)\n    })\n  }\n})\n\nconst link = from([\n  errorLink,\n  new HttpLink({ uri: \"http://localhost:8080/graphql\" })\n])\nconst client = new ApolloClient({\n  cache: {},\n  link: link\n})\nfunction App() {\n  const [siteState, setSiteState] = useState({})\n\n  useEffect(() => {\n\n    fetch(\"/api/items\").\n      then(res => res.json()).\n      then(data => setSiteState(data))\n\n  }, [])\n  function renderState() {\n    if (siteState)\n      return JSON.stringify(siteState)\n  }\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"App\">\n        Hello World\n        <Button>Material Button</Button>\n        {/* {renderState()} */}\n        <Card sx={{ maxWidth: 345 }}>\n          <CardMedia\n            component=\"img\"\n            height=\"140\"\n            image={siteState.image ? siteState.image : \"https://images8.alphacoders.com/127/1274206.jpg\"}\n            alt=\"green iguana\"\n          />\n\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n              Black Adam\n\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              King of kandak\n              {renderState()}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button size=\"small\">Share</Button>\n            <Button size=\"small\">Learn More</Button>\n          </CardActions>\n        </Card>\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}